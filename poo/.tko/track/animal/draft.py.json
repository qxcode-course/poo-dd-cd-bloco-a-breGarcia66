{
    "patches": [
        {
            "label": "2025-09-23_21-04-35",
            "content": "@@ -1074,12 +1074,4 @@\n %22);%0A\n-%0Amain();\n",
            "lines": "51"
        },
        {
            "label": "2025-09-23_21-04-52",
            "content": "@@ -279,27 +279,28 @@\n d (self) -%3E \n-str\n+None\n :%0A    match \n@@ -335,28 +335,21 @@\n     \n-return %22---%22;%0A      \n+print(%22---%22);\n %0A   \n@@ -371,29 +371,22 @@\n     \n-return \n+print(\n %22RIP%22\n+)\n ;%0A\n-      %0A\n     \n@@ -403,23 +403,23 @@\n         \n-return \n+print (\n self.sou\n@@ -420,16 +420,17 @@\n lf.sound\n+)\n ;%0A%0A  def\n@@ -494,17 +494,16 @@\n rement;%0A\n-%0A\n     if s\n@@ -567,28 +567,8 @@\n u%22);\n-%0A      self.age = 4;\n %0A%0A# \n@@ -655,17 +655,8 @@\n som%7D\n-  - feito\n %0A%09# \n@@ -687,15 +687,8 @@\n how \n- -feito\n %0A%09# \n@@ -952,32 +952,8 @@\n  %22);\n-%0A%0A    print(f%22$%7Bline%7D%22);\n %0A   \n@@ -1003,1028 +1003,14 @@\n     \n-if len(args) == 1:%0A          break;%0A        %0A        elif len(args) != 1:%0A          print(%22Erro: comando %5C%22end%5C%22 n%C3%A3o precisa de argumentos%22);%0A%0A      case %22init%22:%0A        if len(args) == 3:%0A          animal.species = args%5B1%5D;%0A          animal.sound   = args%5B2%5D;%0A          animal.age     = 0;%0A%0A        elif len(args) != 3:%0A          print(%22Erro: comando %5C%22init%5C%22 necessita de, somente, dois par%C3%A2metros %5C%22init %7Bsp%C3%A9cie%7D %7Bsom%7D%5C%22%22);%0A%0A      case %22show%22:%0A        if len(args) == 1:%0A          print(animal);%0A%0A        elif len(args) != 1:%0A          print(%22Erro: comando %5C%22show%5C%22 n%C3%A3o precisa de argumentos%22);%0A      %0A      case %22grow%22:%0A        if len(args) == 2:%0A          animal.ageBy(int(args%5B1%5D));%0A        %0A        elif len(args) != 2:%0A          print(%22Erro: comando %5C%22grow%5C%22 necessita de, somente, um par%C3%A2metro %5C%22grow %7Bvalor%7D%5C%22%22);%0A      %0A      case %22noise%22:%0A        if len(args) == 1:%0A          print(animal.makeSound());%0A      %0A        elif len(args) != 1:%0A          print(%22Erro: comando %5C%22noise%5C%22 n%C3%A3o precisa de argumentos%22);%0A\n+break;\n %0A   \n",
            "lines": "53"
        },
        {
            "label": "2025-09-23_22-04-48",
            "content": "# Criando classe Animal\n\nclass Animal: \n  def __init__ (self, species: str, sound: str) -> None:\n    self.species: str = species;\n    self.sound:   str = sound;\n    self.age = 0;\n\n  def __str__ (self) -> str:\n    return f\"{self.species}:{self.age}:{self.sound}\";\n\n  def makeSound (self) -> str:\n    match self.age:\n      case 0:\n        return \"---\";\n      \n      case 4:\n        return \"RIP\";\n      \n      case _:\n        return self.sound;\n\n  def ageBy(self, increment: int) -> None:\n    self.age += increment;\n\n    if self.age >= 4:\n      print(f\"warning: {self.species} morreu\");\n      self.age = 4;\n\n# Criando m\u00e9todo main ()\n\n# Comando para serem implementados:\n  #  init {animal} {som}  - feito\n\t# \t- Criar um animal\n\n\t# show  -feito\n\t# \t- Mostrar dados do animal\n\t\n  # grow {somar est\u00e1gio}\n\t# \t- Aumentar est\u00e1gio da vida\n\t\n  # noise\n\t# \t- Fazer barulho do animal\n\ndef main () -> None:\n  animal: Animal = Animal(\"\", \"\");\n  while True:\n    line: str = input();\n    args: list[str] = line.split(\" \");\n\n    print(f\"${line}\");\n    \n    match args[0]:\n      case \"end\":\n        if len(args) == 1:\n          break;\n        \n        elif len(args) != 1:\n          print(\"Erro: comando \\\"end\\\" n\u00e3o precisa de argumentos\");\n\n      case \"init\":\n        if len(args) == 3:\n          animal.species = args[1];\n          animal.sound   = args[2];\n          animal.age     = 0;\n\n        elif len(args) != 3:\n          print(\"Erro: comando \\\"init\\\" necessita de, somente, dois par\u00e2metros \\\"init {sp\u00e9cie} {som}\\\"\");\n\n      case \"show\":\n        if len(args) == 1:\n          print(animal);\n\n        elif len(args) != 1:\n          print(\"Erro: comando \\\"show\\\" n\u00e3o precisa de argumentos\");\n      \n      case \"grow\":\n        if len(args) == 2:\n          animal.ageBy(int(args[1]));\n        \n        elif len(args) != 2:\n          print(\"Erro: comando \\\"grow\\\" necessita de, somente, um par\u00e2metro \\\"grow {valor}\\\"\");\n      \n      case \"noise\":\n        if len(args) == 1:\n          print(animal.makeSound());\n      \n        elif len(args) != 1:\n          print(\"Erro: comando \\\"noise\\\" n\u00e3o precisa de argumentos\");\n\n      case _:\n        print(f\"Erro: {args[0]} n\u00e3o encontrado\");\n\nmain();",
            "lines": "94"
        }
    ]
}